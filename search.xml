<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>idea插件分享2</title>
      <link href="/2023/08/07/idea%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB2/"/>
      <url>/2023/08/07/idea%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB2/</url>
      
        <content type="html"><![CDATA[<h1 id="IntelliJ-IDEA提高写代码效率和代码规范性的插件"><a href="#IntelliJ-IDEA提高写代码效率和代码规范性的插件" class="headerlink" title="IntelliJ IDEA提高写代码效率和代码规范性的插件"></a>IntelliJ IDEA提高写代码效率和代码规范性的插件</h1><p><em><strong>上期分享了的插件主要是为了提高代码或编辑器的观赏性，以娱乐为主，这期分享更加实用的代码。</strong></em></p><h2 id="1-Key-Promoter-X"><a href="#1-Key-Promoter-X" class="headerlink" title="1.Key Promoter X"></a>1.Key Promoter X</h2><p>该插件能够在你使用鼠标完成一项操作时，提供一个快捷键的提示。通过熟悉快捷键，能够大大提高你的编码效率。</p><h2 id="2-CheckStyle-IDEA"><a href="#2-CheckStyle-IDEA" class="headerlink" title="2.CheckStyle-IDEA"></a>2.CheckStyle-IDEA</h2><p>这个插件集成了Checkstyle，可以帮助你遵循编码规范。它会在你编写代码的同时检查语法错误、代码风格问题和潜在的Bug，并给出相应的警告或错误提示。</p><h2 id="3-SonarLint"><a href="#3-SonarLint" class="headerlink" title="3.SonarLint"></a>3.SonarLint</h2><p>这是一个非常受欢迎的静态代码分析工具，可以帮助你在编写代码时发现并修复潜在的问题。SonarLint能够检测代码质量问题、安全问题、性能问题等，使你的代码更加健壮。</p><h2 id="4-Rainbow-Brackets"><a href="#4-Rainbow-Brackets" class="headerlink" title="4.Rainbow Brackets"></a>4.Rainbow Brackets</h2><p>代码中的括号配对是编码过程中常见的错误，而这个插件会以不同的颜色显示括号，以明显区分不同的级别。这样一来你就能够更容易地识别括号是否匹配，减少错误率。</p><h2 id="5-GitToolBox"><a href="#5-GitToolBox" class="headerlink" title="5.GitToolBox"></a>5.GitToolBox</h2><p>如果你使用Git进行版本控制，并频繁地切换支、查看日志、提交和推送更改，该插件能够大大提高你的工作效率。你可以通过该插件直接在IDEA中管理和操作Git的各种命令。</p><p>以上插件能够帮助你在编码过程中提高效率和代码质量。希望对你有所助！</p>]]></content>
      
      
      <categories>
          
          <category> idea插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> 插件 </tag>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea插件分享1</title>
      <link href="/2023/08/07/idea%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB1/"/>
      <url>/2023/08/07/idea%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB1/</url>
      
        <content type="html"><![CDATA[<h1 id="IntelliJ-IDEA好玩和好看的插件"><a href="#IntelliJ-IDEA好玩和好看的插件" class="headerlink" title="IntelliJ IDEA好玩和好看的插件"></a>IntelliJ IDEA好玩和好看的插件</h1><p>IntelliJ IDEA是一款功能强大的集成开发环境（IDE），而且还有一些好玩和好看的插件可以为你的编程体验增添一些乐趣和个性化。以下是几个推荐的好玩和好看的插件：</p><h2 id="1-CodeGlance"><a href="#1-CodeGlance" class="headerlink" title="1. CodeGlance"></a>1. <strong>CodeGlance</strong></h2><p>这个插件在编辑器的侧边栏添加了一个小型的缩略图，用来展示整个文件的结构。它能够帮助你更好地理解和导航代码。缩略图的外观非常简洁，既实用又美观。</p><h2 id="2-Rainbow-Brackets"><a href="#2-Rainbow-Brackets" class="headerlink" title="2. Rainbow Brackets"></a>2. <strong>Rainbow Brackets</strong></h2><p>这个插件可以为括号加上不同的彩色，在你编写代码时，可以让你更容易找到每个括号的匹配对应关系。它不仅能提高代码的可读性，还能给编辑器增色不少。</p><h2 id="3-Material-Theme-UI"><a href="#3-Material-Theme-UI" class="headerlink" title="3. Material Theme UI"></a>3. <strong>Material Theme UI</strong></h2><p>这是一款非常流行的主题插件，提供了一系列漂亮的颜色方案和界面样式，使得IDE的界面更加现代化和美观。你可以根据个人偏好自定义主题，让你的IDE与众不同。</p><h2 id="4-Nyan-Progress-Bar"><a href="#4-Nyan-Progress-Bar" class="headerlink" title="4. Nyan Progress Bar"></a>4. <strong>Nyan Progress Bar</strong></h2><p>这个插件会将进度条变成彩色的”Nyan Cat”，在后台任务执行时，它会伴随着”Nyan Cat”的奔跑，给你带来一些愉悦和娱乐。你可以在IDE设置中开启它，让编码过程更加有趣。</p><h2 id="5-Presentation-Assistant"><a href="#5-Presentation-Assistant" class="headerlink" title="5. Presentation Assistant"></a>5. <strong>Presentation Assistant</strong></h2><p>这个插件会在编辑器上方显示一个小巧的辅助工具栏，用于展示你当前按下的键盘快捷键。不仅可以帮助你记忆快捷键，还能在做演示或录屏时，让观众更好地跟踪你的操作。</p><p>以上是几个IntelliJ IDEA的好玩和好看的插件，它们可以为你的编程体验增添一些乐趣和个性化。试试这些插件，让你的IDE更加好玩和好看吧！</p>]]></content>
      
      
      <categories>
          
          <category> idea插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> 插件 </tag>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安利edge浏览器chatgpt插件</title>
      <link href="/2023/08/07/%E5%AE%89%E5%88%A9edge%E6%B5%8F%E8%A7%88%E5%99%A8chatgpt%E6%8F%92%E4%BB%B6/"/>
      <url>/2023/08/07/%E5%AE%89%E5%88%A9edge%E6%B5%8F%E8%A7%88%E5%99%A8chatgpt%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="WebTab插件"><a href="#WebTab插件" class="headerlink" title="WebTab插件"></a>WebTab插件</h1><p>___WeTab___是一个集成了众多实用功能的新标签页，让你的上网体验更加便捷和个性化。可以在edge浏览器的扩展中搜索添加，集成<code>chatgpt</code>只是其中一个功能，以下是一些WeTab的其他功能和特点：</p><h2 id="1-快速访问常用网站"><a href="#1-快速访问常用网站" class="headerlink" title="1. 快速访问常用网站"></a>1. 快速访问常用网站</h2><p>WeTab为你提供快速访问常用网站的功能，你可以在主界面轻松地设置你最常访问的网站链接。以后每次打开WeTab，你都可以直接点击链接，无需再手动输入网址或搜索。</p><h2 id="2-实时天气预报"><a href="#2-实时天气预报" class="headerlink" title="2. 实时天气预报"></a>2. 实时天气预报</h2><p>WeTab会根据你的地理位置实时提供准确的天气预报。你可以通过点击天气模块了解当前天气情况，以便做好出行、穿衣和活动的准备。</p><h2 id="3-智能搜索"><a href="#3-智能搜索" class="headerlink" title="3. 智能搜索"></a>3. 智能搜索</h2><p>WeTab集成了强大的智能搜索功能，由ChatAI提供支持。ChatAI使用gpt-3.5-turbo模型，能够理解你的问题，并提供准确的答案或相关信息。无论是搜索具体的知识问题还是获取实用的建议，ChatAI都能为你提供帮助。</p><h2 id="4-个人待办事项"><a href="#4-个人待办事项" class="headerlink" title="4. 个人待办事项"></a>4. 个人待办事项</h2><p>WeTab还提供了个人待办事项功能，帮助你管理日常任务和提醒事项。你可以添加、编辑和完成任务，并设置提醒时间。无论是日常工作、学习还是生活，WeTab都能帮你保持高效和有序。</p><h2 id="5-自定义主题和背景"><a href="#5-自定义主题和背景" class="headerlink" title="5. 自定义主题和背景"></a>5. 自定义主题和背景</h2><p>WeTab允许你根据个人喜好自定义主题和背景。你可以选择不同的配色方案和背景图片，让WeTab的界面更符合你的个性和审美。</p><h2 id="6-实时新闻和热门话题"><a href="#6-实时新闻和热门话题" class="headerlink" title="6. 实时新闻和热门话题"></a>6. 实时新闻和热门话题</h2><p>WeTab会为你提供实时的新闻动态和热门话题，帮你及时了解最新的社会热点和事件。你可以通过阅读新闻文章、参与讨论或分享给朋友，与世界保持紧密的联系。</p><p>WeTab致力于为用户提供更好的上网体验，通过集成众多实用功能，让你的每一次上网都更加高效和愉快！</p><p><strong>赶快添加到你的浏览器试试吧！（PS：Edge很好，我选择Google Chrome😎）</strong></p>]]></content>
      
      
      <categories>
          
          <category> 安利好物 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> 安利 </tag>
            
            <tag> chatgpt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完全二叉树的节点个数</title>
      <link href="/2023/08/06/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/"/>
      <url>/2023/08/06/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="完全二叉树的节点个数"><a href="#完全二叉树的节点个数" class="headerlink" title="完全二叉树的节点个数"></a>完全二叉树的节点个数</h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p><em><strong>求一个完全二叉树的节点个数。   <a href="https://leetcode.cn/problems/count-complete-tree-nodes/">leetcode链接</a></strong></em></p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><h3 id="1-通用解法"><a href="#1-通用解法" class="headerlink" title="1.通用解法"></a>1.通用解法</h3><p>对于普通的二叉树，我们可以利用深度优先和广度优先方式，在遍历节点的过程中统计节点的个数，在此题中也可以采用这种方式，下面给出代码，不过多赘述。</p><p><strong>代码如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 深度优先</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">countNodes</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span>(root== <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">return</span> countNodes(root.left)+countNodes(root.right)+<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 广度优先</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">countNodes</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">       queue.add(root);</span><br><span class="line">       <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> queue.size();</span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line">               <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> queue.poll();</span><br><span class="line">               res++;</span><br><span class="line">               <span class="keyword">if</span> (node.left != <span class="literal">null</span>) queue.offer(cur.left);</span><br><span class="line">               <span class="keyword">if</span> (node.right != <span class="literal">null</span>) queue.offer(cur.right);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> res;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="2-完全二叉树解法"><a href="#2-完全二叉树解法" class="headerlink" title="2.完全二叉树解法"></a>2.完全二叉树解法</h3><p>但是这并没有达到本题<code>考察的目的</code>，题目中指出该二叉树为<code>完全二叉树</code>[^1]，所以应该利用其特点来解题。我们知道满二叉树的计算公式是：<code>2的深度次方-1</code>，而一棵完全二叉树虽然无法直接利用该公式计算，但在它的左子树或右子树中一定可以找到满二叉树，而那部分完全可以借助满二叉树的计算公式。具体思路以注释形式体现在代码中。</p><p><em>方框中为在子树中找到的满二叉树:</em></p><p><img src= "/img/loading.gif" data-lazy-src="/2023/08/06/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0/image1.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 利用到完全二叉树的特点</span></span><br><span class="line"><span class="comment">    * 完全二叉树可以看成多个满二叉树拼接而成，满二叉树结点个数用2^n-1来计算，n表示层数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">countNodes</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span>(root== <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       <span class="comment">//在完全二叉树中，如果一直向左的深度与一直向右的深度相等，则说明是满二叉树，普通二叉数没有这个特点</span></span><br><span class="line">       <span class="comment">//分别计算深度。为什么初始值设为1呢？如果两值计算出来相等，需要利用公式2的n次方来计算，如果值是1（left=right=null即二叉树只有一个根结点），则返回结果为2^1-1=1;如果值是2，则返回结果是2^2-1=3</span></span><br><span class="line">       <span class="type">int</span> leftDepth=<span class="number">1</span>;</span><br><span class="line">       <span class="type">int</span> rightDepth=<span class="number">1</span>;</span><br><span class="line">       TreeNode left=root.left;</span><br><span class="line">       TreeNode right=root.right;</span><br><span class="line">       <span class="keyword">while</span>(left!=<span class="literal">null</span>)&#123;</span><br><span class="line">           left=left.left;</span><br><span class="line">           leftDepth++;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">while</span>(right!=<span class="literal">null</span>)&#123;</span><br><span class="line">           right=right.right;</span><br><span class="line">           rightDepth++;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//相等表示该树是满二叉树，运用公式计算节点数。因为后面用到了递归，所以此处的树就不一定是原树了，也可能是子树，即某棵子树为满二叉树。</span></span><br><span class="line">       <span class="keyword">if</span>(leftDepth==rightDepth)&#123;</span><br><span class="line">           <span class="keyword">return</span> (<span class="type">int</span>)(Math.pow(<span class="number">2</span>,leftDepth) -<span class="number">1</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//不是满二叉树则向左右子树寻找满二叉树并将求得的结点数以及根结点那一个加起来，这样一层一层递归最终求得整棵树的节点数</span></span><br><span class="line">       <span class="keyword">return</span> countNodes(root.left)+countNodes(root.right)+<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>[^1]: 设二叉树的<code>深度为h</code>，<code>除第 h 层外</code>，<code>其它各层 (1～h-1) 的结点数都达到最大个数(即1~h-1层为一个满二叉 树)</code>，第 h 层所有的结点都连续集中在最左边，这就是完全二叉树</p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 完全二叉树 </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水专传奇</title>
      <link href="/2023/08/04/%E6%B0%B4%E4%B8%93%E4%BC%A0%E5%A5%87/"/>
      <url>/2023/08/04/%E6%B0%B4%E4%B8%93%E4%BC%A0%E5%A5%87/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-初入堂堂水专"><a href="#第一章-初入堂堂水专" class="headerlink" title="第一章 初入堂堂水专"></a>第一章 初入堂堂水专</h1><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>​误入水泥地，心情很压抑。</p><p>​临时抱佛脚，啊我临时抱佛脚。</p>]]></content>
      
      
      <categories>
          
          <category> 小作文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 瞎说说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感谢贴</title>
      <link href="/2023/08/04/%E6%84%9F%E8%B0%A2%E8%B4%B4/"/>
      <url>/2023/08/04/%E6%84%9F%E8%B0%A2%E8%B4%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="我谢谢你们哈"><a href="#我谢谢你们哈" class="headerlink" title="我谢谢你们哈"></a>我谢谢你们哈</h1><h2 id="感谢CCTV"><a href="#感谢CCTV" class="headerlink" title="感谢CCTV"></a>感谢CCTV</h2><h2 id="感谢MTV"><a href="#感谢MTV" class="headerlink" title="感谢MTV"></a>感谢MTV</h2><h2 id="感谢山东卫视"><a href="#感谢山东卫视" class="headerlink" title="感谢山东卫视"></a>感谢山东卫视</h2><h2 id="感谢山河大学"><a href="#感谢山河大学" class="headerlink" title="感谢山河大学"></a>感谢山河大学</h2><h2 id="感谢水专"><a href="#感谢水专" class="headerlink" title="感谢水专"></a>感谢水专</h2><h2 id="感谢北京协和脑科疾病治理有限医院"><a href="#感谢北京协和脑科疾病治理有限医院" class="headerlink" title="感谢北京协和脑科疾病治理有限医院"></a>感谢北京协和脑科疾病治理有限医院</h2>]]></content>
      
      
      <categories>
          
          <category> 小作文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 瞎说说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/04/hello-world/"/>
      <url>/2023/08/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
